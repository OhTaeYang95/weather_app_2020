{"version":3,"sources":["Loading.js","Weather.js","App.js","web-build/register-service-worker.js"],"names":["Loading","View","style","styles","container","StatusBar","barStyle","Text","text","StyleSheet","create","flex","justifyContent","paddingHorizontal","paddingVertical","backgroundColor","color","fontSize","weatherOptions","Thunderstorm","iconName","gradient","title","subtitle","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Mist","Dust","Haze","Weather","temp","condition","LinearGradient","colors","halfContainer","MaterialCommunityIcons","size","name","textContainer","propTypes","PropTypes","number","isRequired","oneOf","alignItems","fontWeight","marginBottom","textAlign","API_KEY","state","isLoading","getWeather","latitude","longitude","a","async","axios","get","data","main","weather","setState","getLocation","Location","coords","Alert","alert","this","Math","round","React","Component","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.e65f9ae2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, StatusBar } from 'react-native';\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar barStyle='dark-content' />\r\n      <Text style={styles.text}>Getting the weather</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'flex-end',\r\n    paddingHorizontal: 30,\r\n    paddingVertical: 100,\r\n    backgroundColor: '#FDF6AA',\r\n  },\r\n  text: {\r\n    color: '#2c2c2c',\r\n    fontSize: 30,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { View, Text, StyleSheet, StatusBar } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nconst weatherOptions = {\r\n  Thunderstorm: {\r\n    iconName: 'weather-lightning',\r\n    gradient: ['#373B44', '#4286f4'],\r\n    title: 'Thunderstorm',\r\n    subtitle: 'stay Home',\r\n  },\r\n  Drizzle: {\r\n    iconName: 'weather-hail',\r\n    gradient: ['#89F7FE', '#66A6FF'],\r\n    title: 'Drizzle',\r\n    subtitle: 'Is like rain',\r\n  },\r\n  Rain: {\r\n    iconName: 'weather-rainy',\r\n    gradient: ['#00C6FB', '#005BEA'],\r\n    title: 'Raining',\r\n    subtitle: 'For more info look outside',\r\n  },\r\n  Snow: {\r\n    iconName: 'weather-snowy',\r\n    gradient: ['#7DE2FC', '#B9B6E5'],\r\n    title: 'Cold',\r\n    subtitle: 'Do you want to build a snowman?',\r\n  },\r\n  Atmosphere: {\r\n    iconName: 'weather-hail',\r\n    gradient: ['#89F7FE', '#66A6FF'],\r\n  },\r\n  Clear: {\r\n    iconName: 'weather-sunny',\r\n    gradient: ['#FF7300', '#FEF253'],\r\n    title: 'Sunny',\r\n    subtitle: 'Must go to the outside',\r\n  },\r\n  Clouds: {\r\n    iconName: 'weather-cloudy',\r\n    gradient: ['#D7D2CC', '#304352'],\r\n    title: 'Clouds',\r\n    subtitle: 'boring',\r\n  },\r\n  Mist: {\r\n    iconName: 'weather-hail',\r\n    gradient: ['#4DA0B0', '#D39D38'],\r\n    title: 'Mist!',\r\n    subtitle: 'misses miss mist',\r\n  },\r\n  Dust: {\r\n    iconName: 'weather-hail',\r\n    gradient: ['#4DA0B0', '#D39D38'],\r\n    title: 'Dusty',\r\n    subtitle: 'I hate dust',\r\n  },\r\n  Haze: {\r\n    iconName: 'weather-hail',\r\n    gradient: ['#4DA0B0', '#D39D38'],\r\n    title: 'Haze',\r\n    subtitle: \"Just don't go outside.\",\r\n  },\r\n};\r\n\r\nexport default function Weather({ temp, condition }) {\r\n  return (\r\n    <LinearGradient\r\n      colors={weatherOptions[condition].gradient}\r\n      style={styles.container}\r\n    >\r\n      <StatusBar barStyle='light-content' />\r\n      <View style={styles.halfContainer}>\r\n        <MaterialCommunityIcons\r\n          size={96}\r\n          name={weatherOptions[condition].iconName}\r\n          color='white'\r\n        />\r\n        <Text style={styles.temp}>{temp}Â°</Text>\r\n      </View>\r\n      <View style={styles.textContainer}>\r\n        <Text style={styles.title}>{weatherOptions[condition].title}</Text>\r\n        <Text style={styles.subtitle}>\r\n          {weatherOptions[condition].subtitle}\r\n        </Text>\r\n      </View>\r\n    </LinearGradient>\r\n  );\r\n}\r\n\r\nWeather.propTypes = {\r\n  temp: PropTypes.number.isRequired,\r\n  condition: PropTypes.oneOf([\r\n    'Thunderstorm',\r\n    'Drizzle',\r\n    'Rain',\r\n    'Snow',\r\n    'Atmosphere',\r\n    'Clear',\r\n    'Clouds',\r\n    'Haze',\r\n    'Mist',\r\n    'Dust',\r\n  ]).isRequired,\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  temp: {\r\n    fontSize: 42,\r\n    color: 'white',\r\n  },\r\n  halfContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    color: 'white',\r\n    fontSize: 44,\r\n    fontWeight: '300',\r\n    marginBottom: 10,\r\n    textAlign: 'left',\r\n  },\r\n  subtitle: {\r\n    fontWeight: '600',\r\n    color: 'white',\r\n    fontSize: 24,\r\n    textAlign: 'left',\r\n  },\r\n  textContainer: {\r\n    alignItems: 'flex-start',\r\n    paddingHorizontal: 40,\r\n    justifyContent: 'center',\r\n    flex: 1,\r\n  },\r\n});\r\n","import React from 'react';\nimport { Alert } from 'react-native';\nimport Loading from './Loading.js';\nimport * as Location from 'expo-location';\nimport axios from 'axios';\nimport Weather from './Weather.js';\n\nconst API_KEY = '5fb8d4608850648732a2135e4544a6f3';\n\nexport default class extends React.Component {\n  state = {\n    isLoading: true,\n  };\n  getWeather = async (latitude, longitude) => {\n    const {\n      data: {\n        main: { temp },\n        weather,\n      },\n    } = await axios.get(\n      `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&APPID=${API_KEY}&units=metric`\n    );\n    this.setState({\n      isLoading: false,\n      condition: weather[0].main,\n      temp,\n    });\n  };\n  getLocation = async () => {\n    try {\n      const response = await Location.requestPermissionsAsync();\n      const {\n        coords: { latitude, longitude },\n      } = await Location.getCurrentPositionAsync();\n      this.getWeather(latitude, longitude);\n    } catch (error) {\n      Alert.alert(\"Can't find you\");\n    }\n  };\n\n  componentDidMount() {\n    this.getLocation();\n  }\n  render() {\n    const { isLoading, temp, condition } = this.state;\n    return isLoading ? (\n      <Loading />\n    ) : (\n      <Weather temp={Math.round(temp)} condition={condition} />\n    );\n  }\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/weather_app_2020/expo-service-worker.js', { scope: '/weather_app_2020/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}