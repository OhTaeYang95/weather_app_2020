{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import Alert from\"react-native-web/dist/exports/Alert\";import Loading from\"./Loading.js\";import*as Location from'expo-location';import axios from'axios';import Weather from\"./Weather.js\";var API_KEY='5fb8d4608850648732a2135e4544a6f3';var _default=function(_React$Component){_inherits(_default,_React$Component);var _super=_createSuper(_default);function _default(){var _this;_classCallCheck(this,_default);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isLoading:true};_this.getWeather=function _callee(latitude,longitude){var _await$axios$get,_await$axios$get$data,temp,weather;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(axios.get(\"http://api.openweathermap.org/data/2.5/weather?lat=\"+latitude+\"&lon=\"+longitude+\"&APPID=\"+API_KEY+\"&units=metric\"));case 2:_await$axios$get=_context.sent;_await$axios$get$data=_await$axios$get.data;temp=_await$axios$get$data.main.temp;weather=_await$axios$get$data.weather;_this.setState({isLoading:false,condition:weather[0].main,temp:temp});case 7:case\"end\":return _context.stop();}}},null,null,null,Promise);};_this.getLocation=function _callee2(){var response,_await$Location$getCu,_await$Location$getCu2,latitude,longitude;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());case 3:response=_context2.sent;_context2.next=6;return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());case 6:_await$Location$getCu=_context2.sent;_await$Location$getCu2=_await$Location$getCu.coords;latitude=_await$Location$getCu2.latitude;longitude=_await$Location$getCu2.longitude;_this.getWeather(latitude,longitude);_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](0);Alert.alert(\"Can't find you\");case 16:case\"end\":return _context2.stop();}}},null,null,[[0,13]],Promise);};return _this;}_createClass(_default,[{key:\"componentDidMount\",value:function componentDidMount(){this.getLocation();}},{key:\"render\",value:function render(){var _this$state=this.state,isLoading=_this$state.isLoading,temp=_this$state.temp,condition=_this$state.condition;return isLoading?React.createElement(Loading,null):React.createElement(Weather,{temp:Math.round(temp),condition:condition});}}]);return _default;}(React.Component);export{_default as default};","map":{"version":3,"sources":["D:/Projects/Web/weather_app_2020/weather/App.js"],"names":["React","Loading","Location","axios","Weather","API_KEY","state","isLoading","getWeather","latitude","longitude","get","data","temp","main","weather","setState","condition","getLocation","requestPermissionsAsync","response","getCurrentPositionAsync","coords","Alert","alert","Math","round","Component"],"mappings":"4jCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,uDAEA,MAAOC,CAAAA,OAAP,oBACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,eAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,oBAEA,GAAMC,CAAAA,OAAO,CAAG,kCAAhB,C,8UAGEC,K,CAAQ,CACNC,SAAS,CAAE,IADL,C,OAGRC,U,CAAa,iBAAOC,QAAP,CAAiBC,SAAjB,4NAMDP,KAAK,CAACQ,GAAN,uDAC8CF,QAD9C,SAC8DC,SAD9D,WACiFL,OADjF,iBANC,+EAETO,IAFS,CAGCC,IAHD,uBAGPC,IAHO,CAGCD,IAHD,CAIPE,OAJO,uBAIPA,OAJO,CASX,MAAKC,QAAL,CAAc,CACZT,SAAS,CAAE,KADC,CAEZU,SAAS,CAAEF,OAAO,CAAC,CAAD,CAAP,CAAWD,IAFV,CAGZD,IAAI,CAAJA,IAHY,CAAd,EATW,qE,OAebK,W,CAAc,yRAEahB,QAAQ,CAACiB,uBAAT,EAFb,SAEJC,QAFI,kEAKAlB,QAAQ,CAACmB,uBAAT,EALA,2FAIRC,MAJQ,CAIEb,QAJF,wBAIEA,QAJF,CAIYC,SAJZ,wBAIYA,SAJZ,CAMV,MAAKF,UAAL,CAAgBC,QAAhB,CAA0BC,SAA1B,EANU,qFAQVa,KAAK,CAACC,KAAN,CAAY,gBAAZ,EARU,2E,iGAYM,CAClB,KAAKN,WAAL,GACD,C,uCACQ,iBACgC,KAAKZ,KADrC,CACCC,SADD,aACCA,SADD,CACYM,IADZ,aACYA,IADZ,CACkBI,SADlB,aACkBA,SADlB,CAEP,MAAOV,CAAAA,SAAS,CACd,oBAAC,OAAD,MADc,CAGd,oBAAC,OAAD,EAAS,IAAI,CAAEkB,IAAI,CAACC,KAAL,CAAWb,IAAX,CAAf,CAAiC,SAAS,CAAEI,SAA5C,EAHF,CAKD,C,sBAzC0BjB,KAAK,CAAC2B,S","sourcesContent":["import React from 'react';\nimport { Alert } from 'react-native';\nimport Loading from './Loading.js';\nimport * as Location from 'expo-location';\nimport axios from 'axios';\nimport Weather from './Weather.js';\n\nconst API_KEY = '5fb8d4608850648732a2135e4544a6f3';\n\nexport default class extends React.Component {\n  state = {\n    isLoading: true,\n  };\n  getWeather = async (latitude, longitude) => {\n    const {\n      data: {\n        main: { temp },\n        weather,\n      },\n    } = await axios.get(\n      `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&APPID=${API_KEY}&units=metric`\n    );\n    this.setState({\n      isLoading: false,\n      condition: weather[0].main,\n      temp,\n    });\n  };\n  getLocation = async () => {\n    try {\n      const response = await Location.requestPermissionsAsync();\n      const {\n        coords: { latitude, longitude },\n      } = await Location.getCurrentPositionAsync();\n      this.getWeather(latitude, longitude);\n    } catch (error) {\n      Alert.alert(\"Can't find you\");\n    }\n  };\n\n  componentDidMount() {\n    this.getLocation();\n  }\n  render() {\n    const { isLoading, temp, condition } = this.state;\n    return isLoading ? (\n      <Loading />\n    ) : (\n      <Weather temp={Math.round(temp)} condition={condition} />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}